[{"C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\App.js":"2","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\store.js":"3","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\usersSlice.js":"4","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\UserList.jsx":"5","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\EditUser.jsx":"6","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\AddUser.jsx":"7","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\homepage.jsx":"8","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\HomePage.jsx":"9","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\AdminLogin.jsx":"10","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\AdminPage.jsx":"11","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\AddSubject.jsx":"12","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\GetSubject.jsx":"13","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\AddQuestion.jsx":"14","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\GetQuestion.jsx":"15","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\DeleteQuestion.jsx":"16","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\UserPage.jsx":"17","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\CreateTest.jsx":"18","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\GetTest.jsx":"19","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\CreateReport.jsx":"20","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\GetReport.jsx":"21","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\GetAllReport.jsx":"22"},{"size":400,"mtime":1620147422189,"results":"23","hashOfConfig":"24"},{"size":2663,"mtime":1620149925750,"results":"25","hashOfConfig":"24"},{"size":187,"mtime":1611928506000,"results":"26","hashOfConfig":"24"},{"size":13955,"mtime":1620230769320,"results":"27","hashOfConfig":"24"},{"size":2637,"mtime":1620239462297,"results":"28","hashOfConfig":"24"},{"size":1937,"mtime":1611928506000,"results":"29","hashOfConfig":"24"},{"size":3468,"mtime":1620274096934,"results":"30","hashOfConfig":"24"},{"size":893,"mtime":1619861809216,"results":"31","hashOfConfig":"24"},{"size":534,"mtime":1620230087000,"results":"32","hashOfConfig":"24"},{"size":2817,"mtime":1620231490886,"results":"33","hashOfConfig":"24"},{"size":3902,"mtime":1620238545034,"results":"34","hashOfConfig":"24"},{"size":2585,"mtime":1620147277027,"results":"35","hashOfConfig":"24"},{"size":3650,"mtime":1620147638500,"results":"36","hashOfConfig":"24"},{"size":4642,"mtime":1620147256087,"results":"37","hashOfConfig":"24"},{"size":2383,"mtime":1620147331150,"results":"38","hashOfConfig":"24"},{"size":1578,"mtime":1620147321738,"results":"39","hashOfConfig":"24"},{"size":872,"mtime":1620149746904,"results":"40","hashOfConfig":"24"},{"size":2214,"mtime":1620135062733,"results":"41","hashOfConfig":"24"},{"size":5210,"mtime":1620147354102,"results":"42","hashOfConfig":"24"},{"size":2827,"mtime":1620141163561,"results":"43","hashOfConfig":"24"},{"size":3029,"mtime":1620145623823,"results":"44","hashOfConfig":"24"},{"size":1283,"mtime":1620153788869,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"14mysuw",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"48"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},"C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\index.js",[],["107","108"],"C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\App.js",["109"],"import { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { AddUser } from \"./features/users/AddUser\";\nimport { EditUser } from \"./features/users/EditUser\";\nimport React from \"react\";\nimport { UserList } from \"./features/users/UserList\";\nimport { home, HomePage } from \"./features/users/HomePage\";\nimport { AdminLogin } from \"./features/users/AdminLogin\";\nimport { AdminPage } from \"./features/users/AdminPage\";\nimport { AddSubject } from \"./features/users/AddSubject\";\nimport { GetSubject } from \"./features/users/GetSubject\";\nimport { AddQuestion } from \"./features/users/AddQuestion\";\nimport { GetQuestion } from \"./features/users/GetQuestion\";\nimport { DeleteQuestion } from \"./features/users/DeleteQuestion\";\nimport { UserPage } from \"./features/users/UserPage\";\nimport { CreateTest } from \"./features/users/CreateTest\";\nimport { GetTest } from \"./features/users/GetTest\";\nimport { CreateReport } from \"./features/users/CreateReport\";\nimport { GetReport } from \"./features/users/GetReport\";\nimport { GetAllReport } from \"./features/users/GetAllReport\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/add-user\">\n            <AddUser />\n          </Route>\n          <Route path=\"/edit-user\">\n            <EditUser />\n          </Route>\n          <Route path=\"/adminlogin\">\n            <AdminLogin />\n          </Route>\n          <Route path=\"/home\">\n            <HomePage />\n          </Route>\n          <Route path=\"/adminpage\">\n            <AdminPage />\n          </Route>\n          <Route path=\"/addsubject\">\n            <AddSubject />\n          </Route>\n          <Route path=\"/getsubject\">\n            <GetSubject />\n          </Route>\n          <Route path=\"/addQuestion\">\n            <AddQuestion />\n          </Route>\n          <Route path=\"/getQuestion\">\n            <GetQuestion />\n          </Route>\n          <Route path=\"/deleteQuestion\">\n            <DeleteQuestion />\n          </Route>\n          <Route path=\"/userPage\">\n            <UserPage />\n          </Route>\n          <Route path=\"/createTest\">\n            <CreateTest />\n          </Route>\n          <Route path=\"/getTest\">\n            <GetTest />\n          </Route>\n          <Route path=\"/submit\">\n            <UserList />\n          </Route>\n          <Route path=\"/create-report\">\n            <CreateReport />\n          </Route>\n          <Route path=\"/getreport\">\n            <GetReport />\n          </Route>\n          <Route path=\"/getAllReport\">\n            <GetAllReport />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\store.js",[],"C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\usersSlice.js",["110","111","112","113","114","115","116","117","118","119","120","121"],"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nvar accesstoken  = ''\nvar userid=''\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", async () => {\n  const response = await fetch(\" http://localhost:8080/api/product/view\");\n  const users = await response.json();\n  return users;\n});\n\nexport const signInUser = createAsyncThunk(\"users/signInUser\", async (userDetails) => {\n  /*await axios.post(\"http://localhost:8080/api/auth/signin\", userDetails).then((response)=>{\n    // console.log('Sign In api response' , response.data);\n    \n    /*console.log(response);\n    console.log(response.data.accessToken);\n    accesstoken = response.data.accessToken;\n   let obj = {\n    status: 200, ...response.data\n    }\n   console.log(obj)\n    return obj;\n  // return response.data;\n  },(error)=>{alert(\"Enter the correct details\") ;console.log(error)})\n */ try {\n      const response = await axios.post(\"http://localhost:8080/api/auth/signin\", userDetails);\n      console.log('Sign In api response:- ', response)\n      const user = await axios.get(\"http://localhost:8080/find/getByUsername/\"+response.data.username)\n      userid = user.data.id\n      alert(userid)\n      accesstoken = response.data.accessToken;\n      alert(accesstoken)\n      let obj = {\n      status: 200, ...response.data\n      }\n      return obj;\n  } catch (err) {\n    console.log(err.response.data)\n    let obj = {\n      status : 500 , ...err.response.data\n    }\n    return obj;\n  }\n});\n\nexport const signUpUser = createAsyncThunk(\"users/signUpUser\", async (userDetails) => {\n    var [role] = [userDetails.role]\n    alert(role)\n  alert(userDetails.role)\n  let body = {\n          name :userDetails.name,\n          username: userDetails.username,\n          email:userDetails.email,\n          password:userDetails.password,\n          role:[role],\n  }\n  try {\n     const response =  axios.post(\"http://localhost:8080/api/auth/signup\",body)\n     console.log('Sign up api response:- ', response)\n    // return response.data;\n     let obj = {\n      status: 200, ...response.data\n      }\n      return obj;\n      //return response.data;\n  } catch (err) {\n      console.log(err); \n      let obj = {\n        status : 500 , ...err.response.data\n      }\n      return obj;\n  }\n});\n\nexport const addSubject = createAsyncThunk(\"users/addSubject\", async (subjectDetails) => {\n  try {\n    alert(accesstoken)\n     const response =  axios.post(\"http://localhost:8080/admin/addSub\",subjectDetails,{\n      headers: {\n          'Authorization': 'Bearer ' + accesstoken\n      }\n  });\n     console.log('Add Subject api response:- ', response)\n     return response.data;\n  } catch (err) {\n      console.log(err);\n  }\n});\nexport const addQuestion = createAsyncThunk(\"users/addQuestion\",async (questionDetails) => {\n  try {\n    const response =  axios.post(\"http://localhost:8080/admin/addQuestion/\" + questionDetails.subject_id , questionDetails ,{\n      headers: {\n          'Authorization': 'Bearer ' + accesstoken\n      }\n  });\n     console.log('Question Added:- ', response)\n     return response.data;\n  } catch (err) {\n      console.log(err);\n  }\n});\n\nexport const getSubject = createAsyncThunk(\"users/getSubject\", async (id) => {\n  try {\n     let response =  await axios.get(\"http://localhost:8080/admin/getSubj/\" + id ,{\n      headers: {\n          'Authorization': 'Bearer ' + accesstoken\n      }\n  });\n     console.log('Got Subject By Id:- ', response)\n     let obj = {\n      status: 200, ...response.data\n      }\n      return obj;//return response.data;\n  } catch (err) {\n      console.log(err); let obj = {\n        status : 500 , ...err.response.data\n      }\n      return obj;\n  }\n});\nexport const getQuestion = createAsyncThunk(\"users/getQuestion\", async (id) => {\n  try {\n     let response =  await axios.get(\"http://localhost:8080/admin/getQuestion/\" + id ,{\n      headers: {\n          'Authorization': 'Bearer ' + accesstoken\n      }\n  });\n     console.log('Got Question By Id :- ', response)\n     return response.data;\n  } catch (err) {\n      console.log(err);\n  }\n});\n\nexport const deleteQuestion = createAsyncThunk(\"users/deleteQuestion\", async (id) => {\n  try {\n     let response =  await axios.delete(\"http://localhost:8080/admin/deleteQuestion/\" + id ,{\n      headers: {\n          'Authorization': 'Bearer ' + accesstoken\n      }\n  });\n     console.log('Got Question By Id :- ', response)\n     let obj = {\n      status: 200, ...response.data\n      }\n      return obj;\n  } catch (err) {\n      console.log(err);\n      let obj = {\n        status : 500 , ...err.response.data\n      }\n      return obj;\n  }\n});\nexport const createTest = createAsyncThunk(\"users/createTest\",async (details) => {\n    var userId = details.userId;\n    var subjectId = details.subject_id\n    var lev = details.level;\n    alert(userId + subjectId + lev)\n  try {\n    const response =  axios.post(\"http://localhost:8080/test/start-test/\" + userId + \"/\" +subjectId+\"/\"+ lev ,details ,{\n      headers: {\n          'Authorization': 'Bearer ' + accesstoken\n      }\n  });\n     console.log('Test Created:- ', response)\n     let obj = {\n      status: 200, ...response.data\n      }\n      return obj;\n  } catch (err) {\n      console.log(err);\n      let obj = {\n        status : 500 , ...err.response.data\n      }\n      return obj;\n    }\n});\n\nexport const getQuestions = createAsyncThunk(\"users/getTest\", async (details) => {\n  try {\n     let response =  await axios.get(\"http://localhost:8080/test/getQuestions/\" + details.testId +\"/\"+details.level ,{\n      headers: {\n          'Authorization': 'Bearer ' + accesstoken\n      }\n  });\n     console.log('Test Details :- ', response)\n     return response.data;\n  } catch (err) {\n      console.log(err);\n  }\n});\n\nexport const createResponse = createAsyncThunk(\"users/createResponse\",async (details) => {\ntry {\n  console.log(details.qid + details.optionChosen + details.testId)\n  let body = {\n    optionChosen:details.optionChosen,\n    questionId:details.qid,\n    testId:details.testId,\n    uid:userid\n  }\n  const response =  axios.post(\"http://localhost:8080/test/create-response\",body ,{\n    headers: {\n        'Authorization': 'Bearer ' + accesstoken\n    }\n});\n   console.log('Response Send:- ', response)\n   let obj = {\n    status: 200, ...response.data\n    }\n    return obj;\n} catch (err) {\n    console.log(err);\n    let obj = {\n      status : 500 , ...err.response.data\n    }\n    return obj;\n  }\n});\nexport const createReport = createAsyncThunk(\"users/createReport\", async (body) => {\n  try {\n     const response =  await axios.post(\"http://localhost:8080/test/create-report\" ,body ,{\n      headers: {\n          'Authorization': 'Bearer ' + accesstoken\n      }\n  });\n     console.log('Report Generated  :- ', response.data)\n    let obj = {\n      status : 200, ...response.data\n    }\n     return obj\n  } catch (err) {\n      console.log(err);\n      let obj ={\n        status:500, ...err.response.data\n      }\n      return obj\n    }\n\n});\n\nexport const getReport = createAsyncThunk(\"users/getReport\", async (reportId) => {\n  try {\n     const response =  await axios.get(\"http://localhost:8080/test/report-details/\" + reportId ,{\n      headers: {\n          'Authorization': 'Bearer ' + accesstoken\n      }\n  });\n     console.log('Report by id  :- ', response.data)\n    let obj = {\n      status : 200, ...response.data\n    }\n     return obj\n  } catch (err) {\n      console.log(err);\n      let obj ={\n        status:500, ...err.response.data\n      }\n      return obj\n    }\n\n});\n\nexport const getAllReport = createAsyncThunk(\"users/getAllReport\", async () => {\n    alert(userid)\n  try {\n     let response =  await axios.get(\"http://localhost:8080/test/getAllReportsForUser/\" + userid ,{\n      headers: {\n          'Authorization': 'Bearer ' + accesstoken\n      }\n  });\n     console.log('Test Details :- ', response)\n     return response.data;\n  } catch (err) {\n      console.log(err);\n  }\n});\n\nconst usersSlice = createSlice({\n  name: \"users\",\n  initialState: {\n    entities: [],\n    loading: false,\n    errorMessage: '',\n    isError :false,\n    successMessage: '',\n    entity: {},\n    isAdminLoggedIn: false,\n    isUserLoggedIn :false,\n    userid:'',\n    isSuccess: false\n  },\n  reducers: {\n    \n  },\n  extraReducers: {\n    [signUpUser.pending]: (state, action) => {\n      state.loading = true;\n  },\n  \n    [signUpUser.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.entity = action.payload\n      if(action.payload.status == 200){\n        state.isError=false;\n        state.errorMessage='';\n        state.isSuccess = true\n      }\n      else{\n          state.isError=true;\n          state.errorMessage=action.payload.message;\n          state.isSuccess = false;\n        }\n      },\n  [signUpUser.rejected]: (state, action) => {\n    alert(\"rejected\")\n    state.loading = false;\n    state.isError = true;\n    state.errorMessage=action.payload.message;\n    state.isSuccess = false;\n  },\n\n    [signInUser.pending]: (state, action) => {\n      state.loading = true;\n  },\n  \n    [signInUser.fulfilled]: (state, action) => {\n    if(action.payload.authorities){\n      var role = action.payload.authorities[0].authority;\n    }\n    else{\n\n    }\n    console.log(role)\n    if((action.payload.status == 200) && role == 'ROLE_ADMIN') {\n         // console.log(action.payload.authorities[0].authority)\n          state.isAdminLoggedIn = true;\n          console.log(action.payload)\n          state.loading = false;\n      }\n     else if((action.payload.status == 200)&& role == 'ROLE_USER'){\n      state.isUserLoggedIn = true;\n      state.loading = false;\n     }\n     else {\n          state.loading = false;\n          state.isError = true;\n          state.errorMessage = action.payload.message\n      }\n\n  },\n  [signInUser.rejected]: (state, action) => {\n      state.loading = false;\n  },\n[createReport.pending]: (state, action) => {\n    state.loading = true;\n},\n[createReport.fulfilled]: (state, action) => {\n  //state.loading = false;\n  if((action.payload.status == 200)) {\n    state.loading = false;\n    state.entities = action.payload\n    state.successMessage = 'Report Created Successfully'\n  }\n   else if(action.payload.status == 500){\n        state.loading = false;\n        state.entities = action.payload\n        state.isError = true;\n        alert(action.payload.message)\n        state.errorMessage = action.payload.message\n        state.successMessage='Failed To Create Report'\n   }\n},\n[createReport.rejected]: (state, action) => {\n    state.loading = false;\n    state.isError = true;\n    state.errorMessage = action.payload.message\n},\n\n[getReport.pending]: (state, action) => {\n  state.entity = action.payload\n  state.loading = true;\n},\n[getReport.fulfilled]: (state, action) => {\n//state.loading = false;\nstate.loading = true\nif((action.payload.status == 200)) {\n  state.loading = false;\n  state.entity = action.payload\n  state.successMessage = 'Report'\n}\n else if(action.payload.status == 500){\n      state.loading = false;\n      state.entity = action.payload\n      state.isError = true;\n      alert(action.payload.message)\n      state.errorMessage = action.payload.message\n      state.successMessage='No Report'\n }\n else{\n   state.errorMessage = action.payload.message\n }\n},\n[getReport.rejected]: (state, action) => {\n  state.isError = true;\n  state.errorMessage = action.payload.message\n  state.loading = true;\n},\n\n\n  [fetchUsers.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [fetchUsers.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.entities = [...state.entities, ...action.payload];\n    },\n    [fetchUsers.rejected]: (state, action) => {\n      state.loading = false;\n    },\n    [getSubject.pending]: (state, action) => {\n      state.loading = true;\n  },\n  [getSubject.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.entity = action.payload;\n      if(action.payload.status == 200){\n        state.loading = false;\n      }else{\n        state.loading = false;\n        state.isError = true;\n        state.errorMessage = action.payload.message\n      }\n    },\n  [getSubject.rejected]: (state, action) => {\n      state.loading = false;\n  },\n[getQuestion.pending]: (state, action) => {\n    state.loading = true;\n},\n[getQuestion.fulfilled]: (state, action) => {\n    state.loading = false;\n    //console.log(action.payload)\n    state.entities = action.payload;\n  },\n[getQuestion.rejected]: (state, action) => {\n    state.loading = false;\n},\n[getQuestions.pending]: (state, action) => {\n  state.loading = true;\n},\n[getQuestions.fulfilled]: (state, action) => {\n  state.loading = false;\n  //console.log(action.payload)\n  state.entities = action.payload;\n},\n[getQuestions.rejected]: (state, action) => {\n  state.loading = false;\n},\n[getAllReport.pending]: (state, action) => {\n  state.loading = true;\n},\n[getAllReport.fulfilled]: (state, action) => {\n  state.loading = false;\n  //console.log(action.payload)\n  state.entities = action.payload;\n},\n[getAllReport.rejected]: (state, action) => {\n  state.loading = false;\n},\n[deleteQuestion.pending]: (state, action) => {\n  state.loading = true;\n},\n[deleteQuestion.fulfilled]: (state, action) => {\n  state.loading = false;\n  state.entities = action.payload;\n  if(action.payload.status == 200){\n    state.successMessage = 'Deleted Successfully'\n  }\n  else{\n    state.errorMessage = action.payload.message\n  }\n},\n[deleteQuestion.rejected]: (state, action) => {\n  state.loading = false;\n},\n[createTest.pending]: (state, action) => {\n  state.loading = true;\n},\n[createTest.fulfilled]: (state, action) => {\n  state.loading = false;\n  state.entities = action.payload;\n  if(action.payload.status == 200){\n    state.successMessage = 'Test Created Successfully ';\n  }\n  else{\n    state.errorMessage = action.payload.message\n  }\n},\n[createTest.rejected]: (state, action) => {\n  state.loading = false;\n},\n  },\n\n});\n\nexport const { userAdded, userUpdated, userDeleted } = usersSlice.actions;\n\nexport default usersSlice.reducer;\n","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\UserList.jsx",["122","123","124","125","126","127","128","129"],"import { fetchUsers, userDeleted } from \"./usersSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nexport function UserList() {\n  return(<div class=\"bg-light\">\n\n  <div className=\"container \">\n  <div>\n        <marquee class=\"text-success\" behavior=\"alternate\" ><h1>Test Submitted Successfully wait till you get result</h1>\n        </marquee>\n </div>\n    <div class=\"img-fluid\">\n        <div class=\"img-fluid text-center\">\n        <marquee direction=\"up\" behavior=\"slide\"> <img src=\"https://www.actioncoach.com/wp-content/uploads/2015/07/stress-management.jpg\" alt=\"Responsive image\" width=\"100%\" ></img></marquee>\n        </div>\n    </div>\n  </div>\n    </div>\n        )\n /* const dispatch = useDispatch();\n\n  const { entities } = useSelector((state) => state.users);\n  const loading = useSelector((state) => state.loading);\n\n  const handleDelete = (id) => {\n    dispatch(userDeleted({ id }));\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <h1>Redux CRUD User app</h1>\n      </div>\n      <div className=\"row\">\n        <div className=\"two columns\">\n          <button\n            onClick={() => dispatch(fetchUsers())}\n            className=\"button-primary\"\n          >\n            Load users\n          </button>\n        </div>\n        <div className=\"two columns\">\n          <Link to=\"/add-user\">\n            <button className=\"button-primary\">Add user</button>\n          </Link>\n        </div>\n      </div>\n      <div className=\"row\">\n        {loading ? (\n          \"Loading...\"\n        ) : (\n          <table className=\"u-full-width\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Product Name</th>\n                <th>Brand Name</th>\n                <th>Price</th>\n                <th>Action</th>\n\n              </tr>\n            </thead>\n            <tbody>\n              {entities.length &&\n                entities.map(({ productId, productName, brandName ,price}, i) => (\n                  <tr key={i}>\n                    <td>{productId}</td>\n                    <td>{productName}</td>\n                    <td>{brandName}</td>\n                    <td>{price}</td>\n                    <td>\n                      <button onClick={() => handleDelete(productId)}>Delete</button>\n                      <Link to={`/edit-user/${productId}`}>\n                        <button>Edit</button>\n                      </Link>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n                */\n               }\n","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\EditUser.jsx",[],"C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\AddUser.jsx",[],"C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\homepage.jsx",[],"C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\HomePage.jsx",["130"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function HomePage () {\r\n  return (<div class=\"bg-light\">\r\n\r\n<div className=\"container \">\r\n  <div class=\"img-fluid\">\r\n      <div class=\"img-fluid text-center\">\r\n     <Link to =\"/add-user\">\r\n      <img src=\"https://i2.wp.com/www.freestudentprojects.com/wp-content/uploads/2013/04/Online-Examin-Portal.jpg?fit=1024%2C682&ssl=1\" alt=\"Responsive image\" width=\"75%\" ></img>\r\n      </Link>\r\n      </div>\r\n  </div>\r\n</div>\r\n  </div>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\AdminLogin.jsx",["131","132"],"import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import { Link } from \"react-router-dom\";\r\nimport {useSelector} from 'react-redux'\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { signInUser } from \"./usersSlice\";\r\nexport function AdminLogin() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { isUserLoggedIn,isError, errorMessage, isAdminLoggedIn,successMessage } = useSelector(\r\n    (state) => state.users\r\n  );\r\n  const [error, setError] = useState(null);\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const handleUserName = (event) => setUserName(event.target.value);\r\n  const handlePassword = (event) => setPassword(event.target.value);\r\nif(isAdminLoggedIn){\r\n    history.push(\"/adminpage\")\r\n}\r\nelse if(isUserLoggedIn){\r\n  history.push(\"/userPage\")\r\n}\r\n  const handleClick = () => {\r\n \r\n     if (username && password) {\r\n      try{\r\n          dispatch(signInUser({username, password})) \r\n        //history.push(\"/adminpage\");\r\n        }catch(Exception){\r\n        alert('error')\r\n      }\r\n      setError('')\r\n    }\r\n    else{\r\n      setError(\"Fill in all fields\")\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    \r\n    <form>\r\n      <div className=\"col-md-6 container\">\r\n        <h3 className=\"text-center\"> Login Page</h3>\r\n        <div className=\"form-group\">\r\n          <label>User name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the username\"\r\n            onChange={handleUserName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the password\"\r\n            onChange={handlePassword}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"custom-control custom-checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"custom-control-input\"\r\n              id=\"checkbox1\"\r\n            />\r\n            <label className=\"custom-control-label\" htmlFor=\"checkbox1\">\r\n              Remember me\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-block\"\r\n          onClick={handleClick}\r\n        >\r\n          Submit\r\n        </button>\r\n        <div class=\"text-danger\">\r\n\r\n        {isError || error != \"\" ? (\r\n          <div>\r\n            <h5>{error}</h5>\r\n             <h5>{errorMessage}</h5>\r\n             </div>\r\n   ) : (\r\n            <></>\r\n            )}\r\n            </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\AdminPage.jsx",["133","134","135","136","137","138","139","140","141","142","143","144","145"],"import { Link } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './AdminPage.css'\r\nexport function AdminPage() {\r\n/*      \r\n    <div>\r\n        <h1>Welcome to Admin Page</h1>\r\n        <div className=\"row\">\r\n        <div className=\"two columns\">\r\n          <Link to=\"/addsubject\">\r\n            <button className=\"button-primary\">Add Subject</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"two columns\">\r\n          <Link to=\"/getsubject\">\r\n            <button className=\"button-primary\">Get Subject</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"two columns\">\r\n          <Link to=\"/addQuestion\">\r\n            <button className=\"button-primary\">Add Question </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"two columns\">\r\n          <Link to=\"/getquestion\">\r\n            <button className=\"button-primary\">Get Question</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"two columns\">\r\n          <Link to=\"/deletequestion\">\r\n            <button className=\"button-primary\">Delete Question</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"two columns\">\r\n          <Link to=\"/createtest\">\r\n            <button className=\"button-primary\">Create Test</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"two columns\">\r\n          <Link to=\"/create-report\">\r\n            <button className=\"button-primary\">Create Report</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"two columns\">\r\n          <Link to=\"/getreport\">\r\n            <button className=\"button-primary\">Get Report</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    <div>\r\n  </div>\r\n  <div>*/ \r\n  return(\r\n    <div>\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" href=\"#\">Admin Panel</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n    <div class=\"navbar-nav\">\r\n      <a class=\"nav-item nav-link active\" href=\"#\">Admin<span class=\"sr-only\">(current)</span></a>\r\n      <Link to=\"/addsubject\">\r\n       <a class=\"nav-item nav-link\" >Add Subject</a>\r\n      </Link>\r\n      <Link to=\"/getsubject\">\r\n            <a class=\"nav-item nav-link\" >Get Subject</a>\r\n      </Link>\r\n      <Link to=\"/addQuestion\">\r\n      <a class=\"nav-item nav-link\">Add Question</a>\r\n      </Link>\r\n      <Link to=\"/getquestion\">\r\n      <a class=\"nav-item nav-link\" >Get Question</a>\r\n      </Link>\r\n      <Link to=\"/deletequestion\">\r\n      <a class=\"nav-item nav-link\" >Delete Question</a>\r\n      </Link>\r\n      <Link to=\"/createtest\">\r\n      <a class=\"nav-item nav-link\">Create Test</a>\r\n      </Link>\r\n      <Link to=\"/create-report\">\r\n      <a class=\"nav-item nav-link\">Create Report</a>\r\n      </Link>\r\n      <Link to=\"/getreport\">\r\n      <a class=\"nav-item nav-link\" >Get Report</a>\r\n      </Link>\r\n    </div>\r\n  </div>\r\n</nav>  \r\n<div className=\"container \">\r\n  <marquee  behavior=\"alternate\"><h1 class=\"text-success\">Welcome to admin portal</h1></marquee>\r\n  <div class=\"img-fluid\">\r\n      <div class=\"img-fluid text-center\" >\r\n      <marquee behavior =\"slide\" direction=\"up\" ><img src=\"https://thumbs.dreamstime.com/b/admin-login-sign-table-made-wood-68499314.jpg\" alt=\"Responsive image\" width=\"75%\" ></img>\r\n      </marquee>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n)\r\n}","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\AddSubject.jsx",["146"],"\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addSubject } from \"./usersSlice\";\r\nexport function AddSubject() {\r\n  const dispatch = useDispatch();\r\n  const [error, setError] = useState(null);\r\n\r\n  const [subjectName, setSubjectName] = useState(\"\");\r\n  const [noOfQuestions, setNoOfQuestions] = useState(\"\");\r\n  const [level, setLevel] = useState(\"\");\r\n  const [duration, setDuration] = useState(\"\");\r\n\r\n  const handleSubjectName = (event) => setSubjectName(event.target.value);\r\n  const handleNoOfQuestions = (event) => setNoOfQuestions(event.target.value);\r\n  const handleLevel = (event) => setLevel(event.target.value);\r\n  const handleDuration = (event) => setDuration(event.target.value);\r\n\r\n  const handleClick = () => {\r\n    if (subjectName && noOfQuestions && level && duration) {\r\n      dispatch(\r\n        addSubject({\r\n          subjectName,\r\n          noOfQuestions,\r\n          level,\r\n          duration,\r\n        })\r\n        );\r\n    }else{\r\n      setError(\"Fill in all fields\");\r\n    }\r\n  };\r\n  return (\r\n    <form>\r\n      <div className=\"col-md-6 container\">\r\n        <h3 className=\"text-center\">Add Subject</h3>\r\n        <div className=\"form-group\">\r\n          <label>Subject Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the subject name\"\r\n            onChange={handleSubjectName}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>No of questions</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the no of question\"\r\n            onChange={handleNoOfQuestions}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Level</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            onChange={handleLevel}\r\n            placeholder=\"Enter the test level\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Duration</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the duration\"\r\n            onChange={handleDuration}\r\n          />\r\n        </div>\r\n          <h6>{error}</h6>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-block\"\r\n          onClick={handleClick}\r\n        >\r\n         Add Subject\r\n        </button>\r\n\r\n      </div>\r\n    </form>\r\n  );\r\n}","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\GetSubject.jsx",["147"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {useEffect,React} from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { getSubject } from \"./usersSlice\";\r\nexport function GetSubject() {\r\n  const dispatch = useDispatch();\r\n  const [subject_id, setSubject_id] = useState(\"\");\r\n  const { isError,errorMessage,loading } = useSelector((state) => state.users);\r\n  const { entity } = useSelector((state) => state.users);\r\n  const handleSubjectId = (event) => setSubject_id(event.target.value);\r\n\r\n  useEffect (() => {\r\n    dispatch(getSubject(subject_id));\r\n  }, [subject_id]);\r\nconsole.log(entity)\r\n\r\nreturn (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <h1>Get Subject By Id</h1>\r\n      </div>\r\n      <div className=\"form-group\">\r\n          <label>Subject Id</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the subject name\"\r\n            onChange={handleSubjectId}\r\n          />\r\n        </div>\r\n       <div>\r\n       {isError || errorMessage != null ? (\r\n          <h6 >{errorMessage} </h6> \r\n        ) : (\r\n          <> </>\r\n        )}\r\n       \r\n       </div> \r\n       <div className=\"row\">\r\n        {loading ? (\r\n          \"Loading...\"\r\n        ) : (\r\n          <table className=\"u-full-width\">\r\n        <thead>\r\n              <tr>\r\n                <th>SubjectId</th>\r\n                <th>Subject Name</th>\r\n                <th>No Of Questions</th>\r\n                <th>Level</th>\r\n                <th>Duration</th>\r\n\r\n              </tr>\r\n        </thead>\r\n            <tbody>\r\n                <td>\r\n                    {\r\n                        entity && entity['subject_id']\r\n                    }\r\n                </td>\r\n                \r\n                <td>\r\n                    {\r\n                        entity && entity['subjectName']\r\n                    }\r\n                </td>\r\n                \r\n                <td>\r\n                    {\r\n                        entity && entity['noOfQuestions']\r\n                    }\r\n                </td>\r\n                <td>\r\n                    {\r\n                        entity && entity['level']\r\n                    }\r\n                </td>\r\n                <td>\r\n                    {\r\n                        entity && entity['duration']\r\n                    }\r\n                </td>\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n /* return /*(\r\n    <form>\r\n      <div className=\"col-md-6 container\">\r\n        <h3 className=\"text-center\">Add Subject</h3>\r\n        <div className=\"form-group\">\r\n          <label>Subject Id</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the subject name\"\r\n            onChange={handleSubjectId}\r\n          />\r\n        </div>\r\n          <h6>{error}</h6>\r\n        \r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary btn-block\"\r\n         //</div> onClick={handleClick}\r\n        \r\n        >\r\n         Get Subject\r\n        </button>\r\n        <table>\r\n            <td>\r\n            {entityById && entityById.tags && \r\n                entityById.tags.map((subject) => {\r\n                    <div>\r\n                    <span class=\"badge badge-secondary\" key={subject.subjectName}>\r\n                      {subject.subjectName}\r\n                      {subject.noO}\r\n                    </span>\r\n                    </div>\r\n                })\r\n            }\r\n            </td>\r\n            \r\n       </table>\r\n      </div>\r\n    </form>\r\n  );\r\n        */}","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\AddQuestion.jsx",[],"C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\GetQuestion.jsx",["148"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {useEffect,React} from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { getQuestion } from \"./usersSlice\";\r\nexport function GetQuestion() {\r\n  const dispatch = useDispatch();\r\n  const [subject_id, setSubject_id] = useState(\"\");\r\n  const { loading } = useSelector((state) => state.users);\r\n  const { entities } = useSelector((state) => state.users);\r\n  const handleSubjectId = (event) => setSubject_id(event.target.value);\r\n\r\n  useEffect (() => {\r\n    dispatch(getQuestion(subject_id));\r\n  }, [subject_id]);\r\nconsole.log(entities)\r\nreturn (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <h1>Get Questions</h1>\r\n      </div>\r\n      <div className=\"form-group\">\r\n          <label>Subject Id</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the subject id\"\r\n            onChange={handleSubjectId}\r\n          />\r\n        </div>\r\n      <div className=\"row\">\r\n        {loading ? (\r\n          \"Loading...\"\r\n        ) : (\r\n          <table className=\"u-full-width\" >\r\n        <thead>\r\n            <td>\r\n            <tr className=\"column\">\r\n                <th>Question Id</th>\r\n                <th>Question Name</th>\r\n                <th>Option 1</th>\r\n                <th>Option 2</th>\r\n                <th>Option 3</th>\r\n                <th>Option 4</th>\r\n                <th>Level</th>\r\n                <th>Marks</th>\r\n            </tr>\r\n            </td>\r\n        </thead>\r\n            <tbody>\r\n                <td>\r\n                    {entities && entities.map(({questionId,questionName,option1,option2,option3,option4,level,marks},i)=>(\r\n                      \r\n                        <tr className=\"row\" key={i}>\r\n                            <td>{questionId}</td>\r\n                            <td>{questionName}</td>\r\n                            <td>{option1}</td>\r\n                            <td>{option2}</td>\r\n                            <td>{option3}</td>\r\n                            <td>{option4}</td>\r\n                            <td>{level}</td>\r\n                            <td>{marks}</td>\r\n                        </tr>\r\n                    ))}\r\n                </td>\r\n            </tbody>\r\n          </table>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\DeleteQuestion.jsx",["149","150","151","152"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useState } from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { deleteQuestion, getQuestion } from \"./usersSlice\";\r\nexport function DeleteQuestion() {\r\n  const dispatch = useDispatch();\r\n  const [questionId, setQuestionId] = useState(\"\");\r\n  const { errorMessage,successMessage , loading } = useSelector((state) => state.users);\r\n  const { entities } = useSelector((state) => state.users);\r\n  const handleQuestionId = (event) => setQuestionId(event.target.value);\r\n const handleClick = () => {\r\n \r\n     try{\r\n         dispatch(deleteQuestion(questionId)) \r\n       //history.push(\"/adminpage\");\r\n       }catch(Exception){\r\n       alert('error')\r\n     }\r\n };\r\nconsole.log(entities)\r\nreturn (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <h1>Get Questions</h1>\r\n      </div>\r\n      <div className=\"form-group\">\r\n          <label>Question Id</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the subject id\"\r\n            onChange={handleQuestionId}\r\n          />\r\n        </div>\r\n        <div>\r\n            <button onClick={handleClick}>\r\n                    Delete Question\r\n            </button>\r\n        </div>\r\n        {successMessage != \"\" ? (\r\n          <h6 >{successMessage}</h6> \r\n        ) : (\r\n          <></>\r\n        )}\r\n        {errorMessage != \"\" ? (\r\n          <h6 >{errorMessage}</h6> \r\n        ) : (\r\n          <></>\r\n        )}\r\n           \r\n        \r\n              </div>\r\n  );\r\n}","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\UserPage.jsx",[],"C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\CreateTest.jsx",["153","154","155"],"import { useState } from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { createTest } from \"./usersSlice\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nexport function CreateTest() {\r\n    const dispatch = useDispatch();\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [subject_id, setSubjectId] = useState(\"\");\r\n    const [level, setLevel] = useState(\"\");\r\n    \r\n    const { errorMessage,successMessage , loading } = useSelector((state) => state.users);\r\n\r\n    const handleUserId = (event) => setUserId(event.target.value);\r\n    const handleSubjectId = (event) => setSubjectId(event.target.value);\r\n    const handleLevel = (event) => setLevel(event.target.value);\r\n    \r\n   const handleClick = () => {\r\n   \r\n       try{\r\n           dispatch(createTest({userId,subject_id,level})) \r\n         //history.push(\"/adminpage\");\r\n         }catch(Exception){\r\n         alert('error')\r\n       }\r\n   };\r\n\r\n    return(<div className=\"container\">\r\n    <div className=\"row\">\r\n      <h1>Create Test</h1>\r\n    </div>\r\n    <div className=\"form-group\">\r\n        <label>Enter The User Id</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter the user id\"\r\n          onChange={handleUserId}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Enter The Subject Id</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter the subject id\"\r\n          onChange={handleSubjectId}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label>Enter the level</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter the  level\"\r\n          onChange={handleLevel}\r\n        />\r\n      </div>\r\n  \r\n\r\n      <div>\r\n          <button onClick={handleClick} >\r\n                  Submit\r\n          </button>\r\n      </div>\r\n\r\n         \r\n        {successMessage != \"\" ? (\r\n          <h6 >{successMessage}</h6> \r\n        ) : (\r\n          <></>\r\n        )}\r\n        {errorMessage != \"\" ? (\r\n          <h6 >{errorMessage}</h6> \r\n        ) : (\r\n          <></>\r\n        )}\r\n            </div> )\r\n}","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\GetTest.jsx",["156"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {useEffect,React} from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getQuestions } from \"./usersSlice\";\r\nimport { createResponse } from \"./usersSlice\";\r\nexport function GetTest() {\r\n  const history  = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [testId, setTestId] = useState(\"\");\r\n  const [optionChosen, setOptionChosen] = useState(\"\");\r\n  const [qid, setQid] = useState(\"\");\r\n  \r\n  const [level, setLevel] = useState(\"\");\r\n  const { loading } = useSelector((state) => state.users);\r\n  const { entities } = useSelector((state) => state.users);\r\n  const handleTestId = (event) => setTestId(event.target.value);\r\n  const handleLevel = (event) => setLevel(event.target.value);\r\n  const handleOptionChosen = (event) => setOptionChosen(event.target.value);\r\n  const handleQuestionId = (event) => setQid(event.target.value);\r\n  /*\r\n  useEffect (() => {\r\n    dispatch(getQuestions({testId,level}));\r\n  }, [testId,level]);*/\r\n  const handleClick = () => {\r\n     try{\r\n         dispatch(getQuestions({testId,level})) \r\n       //history.push(\"/adminpage\");\r\n       }catch(Exception){\r\n       alert('error')\r\n     }\r\n   \r\n    };\r\n   // console.log(entities)\r\n   const handleResponse = () => {\r\n    try{\r\n        dispatch(createResponse({optionChosen,testId,qid})) \r\n      //history.push(\"/adminpage\");\r\n      }catch(Exception){\r\n      alert('error')\r\n    }\r\n  \r\n   };\r\n const handleSubmit = ()=>{\r\n   history.push(\"/submit\")\r\n }\r\nreturn (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <h1>Test</h1>\r\n      </div>\r\n      <div className=\"form-group\">\r\n          <label>Test Id</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the subject id\"\r\n            onChange={handleTestId}\r\n          />\r\n        </div>\r\n      <div className=\"form-group\">\r\n          <label>Level</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter the Level\"\r\n            onChange={handleLevel}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <button onClick={handleClick}>\r\n                    Get Test\r\n            </button>\r\n        </div>\r\n \r\n      <div className=\"row\">\r\n        {loading ? (\r\n          \"Loading...\"\r\n        ) : (\r\n             <table className=\"u-full-width\" >\r\n        <thead>\r\n            <tr className=\"column\">\r\n                <th>Question Id</th>\r\n                <th>Question Name</th>\r\n                <th>Option 1</th>\r\n                <th>Option 2</th>\r\n                <th>Option 3</th>\r\n                <th>Option 4</th>\r\n                <th>Level</th>\r\n                <th>Marks</th>\r\n                <th>Correct Answer</th>\r\n            </tr>\r\n        </thead>\r\n            <tbody>\r\n                <td>\r\n                    {entities && entities.map(({questionId,questionName,option1,option2,option3,option4,level,marks},i)=>(\r\n                      \r\n                        <tr className=\"row\" key={i}>\r\n                            <button onClick={handleQuestionId} value={questionId}>{questionId}</button>\r\n                            <td>{questionName}</td>\r\n                          <div className=\"row\">\r\n                            <button onClick={handleOptionChosen} value={option1}>{option1}</button>\r\n                            <button onClick={handleOptionChosen} value={option2}>{option2}</button>\r\n                            <button onClick={handleOptionChosen} value={option3}>{option3}</button>\r\n                            <button onClick={handleOptionChosen} value={option4}>{option4}</button>\r\n                            </div>\r\n                            <td>{level}</td>\r\n                            <td>{marks}</td>\r\n                          <td><button onClick={handleResponse}>Send</button></td>\r\n                        </tr>\r\n                    ))}\r\n                </td>\r\n            </tbody>\r\n          </table>\r\n          )}\r\n          <div>\r\n                      <button onClick={handleSubmit}>Submit Test</button>\r\n          </div>\r\n      </div>\r\n        \r\n    </div>\r\n);\r\n}/* <input type=\"text\" \r\n            className=\"form-control\"\r\n            placeholder=\"Enter your answer\"\r\n            onChange={handleOptionChosen} /><button onClick={handleResponse}>send </button>*/\r\n\r\n /*  <div>\r\n                      <table >\r\n                          <thead >\r\n                              <th>Enter the Question Id</th>\r\n                              <th>Answer Chosen</th>\r\n                          </thead>\r\n                          <tbody>\r\n                              <td>\r\n                                  <input type=\"number\" placeholder={qid}/>\r\n                                \r\n                              </td>\r\n                              <td>\r\n                                  <input type=\"text\" placeholder={optionChosen} onChange/>\r\n                              </td>\r\n                          </tbody>\r\n                      </table>\r\n          </div>*/           ","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\CreateReport.jsx",["157"],"import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useState } from \"react\";\r\nimport {useDispatch ,useSelector} from 'react-redux';\r\nimport {createReport} from './usersSlice'\r\nexport function CreateReport() {\r\n    const dispatch = useDispatch();\r\n//  const history = useHistory();\r\n  const [error, setError] = useState(null);\r\n  const { errorMessage,successMessage ,isError} = useSelector((state) => state.users);\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [testId, setTestId] = useState(\"\");\r\n  const [totalMarks, setTotalMarks] = useState(\"\");\r\n\r\n  const handleUserId = (event) => setUserId(event.target.value);\r\n  const handleTestId = (event) => setTestId(event.target.value);\r\n  const handleTotalMarks = (event) => setTotalMarks(event.target.value);\r\n \r\n  const handleClick = () => {\r\n    if (testId && userId && totalMarks) {\r\n      //   history.push(\"/userlist\");\r\n      dispatch(\r\n        createReport({\r\n            testId,userId,totalMarks\r\n        })\r\n      );\r\n      \r\n      }else{\r\n        setError(\"Fill in all fields\");\r\n      }\r\n    };\r\n\r\n    return(<div>\r\n            <form>\r\n              <div className=\"col-md-6 container\">\r\n                <h3 className=\"text-center\">Create Report</h3>\r\n                <div className=\"form-group\">\r\n                  <label>Enter User Id</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter User Id\"\r\n                    onChange={handleUserId}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Test Id</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Test Id\"\r\n                      onChange={handleTestId}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label>Total Marks</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Total Marks\"\r\n                    onChange={handleTotalMarks}\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary btn-block\"\r\n                  onClick={handleClick}\r\n                >\r\n                  Create Report\r\n                </button>\r\n                <h1>{successMessage}</h1>\r\n                <h1>{errorMessage}</h1>\r\n                {isError || error != \"\" ? (\r\n          <h6 >{errorMessage} {error}</h6> \r\n        ) : (\r\n          <></>\r\n        )}\r\n                <h1>{error}</h1>\r\n\r\n              </div>\r\n            </form>\r\n\r\n    </div>)\r\n}\r\n ","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\GetReport.jsx",["158"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useState } from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { getReport } from \"./usersSlice\";\r\nexport function GetReport() {\r\n\r\n    const dispatch = useDispatch();\r\n    const [error , setError ] = useState(\"\")\r\n    const [reportId, setReportId] = useState(\"\");\r\n    const { isError,errorMessage,loading } = useSelector((state) => state.users);\r\n    const { entity } = useSelector((state) => state.users);\r\n    const handleReportId = (event) => setReportId(event.target.value);\r\n    const handleClick = () => {\r\n        if (reportId != null) {\r\n          dispatch(\r\n            getReport(reportId)\r\n          );\r\n        //   history.push(\"/userlist\");\r\n        }else{\r\n          setError(\"Fill in all fields\");\r\n        }\r\n      };\r\nreturn( <div className=\"container\">\r\n    <div className=\"row\">\r\n      <h1>Get Report By Id</h1>\r\n    </div>\r\n    <div className=\"form-group\">\r\n        <label>Report Id</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter the report id\"\r\n          onChange={handleReportId}\r\n        />\r\n      </div>\r\n     <div className=\"form-group\">\r\n            <button onClick={handleClick}>\r\n                    Get Report\r\n            </button>\r\n        </div>\r\n \r\n    \r\n     <div>\r\n     {isError || errorMessage != null ? (\r\n        <h6 >{errorMessage} </h6> \r\n      ) : (\r\n        <> </>\r\n      )}\r\n     \r\n     </div> \r\n     <div className=\"row\">\r\n      {loading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <table className=\"u-full-width\">\r\n      <thead>\r\n            <tr>\r\n              <th>Student Name</th>\r\n              <th>Student Email</th>\r\n              <th>Test Date</th>\r\n              <th>Cleared Level</th>\r\n              <th>Subject Name</th>\r\n              <th>Marks Obtained</th>\r\n              <th>Total Marks</th>\r\n            </tr>\r\n      </thead>\r\n          <tbody>\r\n              <tr>\r\n\r\n              <td>\r\n                  {\r\n                      entity && entity['name']\r\n                  }\r\n              </td>\r\n              <td>\r\n                  {\r\n                      entity && entity['email']\r\n                  }\r\n              </td>\r\n              <td>\r\n                  {\r\n                      entity && entity['dateAndTimeOfTest']\r\n                  }\r\n              </td>\r\n              <td>\r\n                  {\r\n                      entity && entity['level']\r\n                  }\r\n              </td>\r\n              <td>\r\n                  {\r\n                      entity && entity['subjecName']\r\n                  }\r\n              </td>\r\n              <td>\r\n                  {\r\n                      entity && entity['testScore']\r\n                  }\r\n              </td>\r\n              <td>\r\n                  {\r\n                      entity && entity['totalScore']\r\n                  }\r\n              </td>\r\n              </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  </div>)\r\n}","C:\\Users\\pc\\Desktop\\New folder\\React\\workspace\\redux-crud-tutorial-master\\src\\features\\users\\GetAllReport.jsx",["159"],"import { useSelector,useDispatch } from \"react-redux\";\r\nimport {useEffect,React} from \"react\";\r\nimport { getAllReport } from \"./usersSlice\";\r\nexport function GetAllReport (){\r\n    const { entities , loading } = useSelector((state) => state.users);\r\n\r\n    const dispatch = useDispatch();\r\nuseEffect (() => {\r\n        dispatch(getAllReport());\r\n      }, []);\r\n   return(\r\n        <div className=\"container\">\r\n   <div className=\"row\">\r\n     <h1>Get Reports</h1>\r\n   </div>\r\n   <div className=\"row\">\r\n     {loading ? (\r\n       \"Loading...\"\r\n     ) : (\r\n       <table className=\"u-full-width\" >\r\n     <thead>\r\n         <tr className=\"row\">\r\n             <th>Report Id</th>\r\n             <th>Cleared Level</th>\r\n             <th>Marks Obtained</th>\r\n             <th>Marks Total</th>\r\n         </tr>\r\n     </thead>\r\n         <tbody>\r\n                  {entities && entities.map(({reportId,clearedLevel,testScore,totalScore},i)=>(\r\n                    <tr className=\"row\" key={i}>\r\n                        <td>{reportId}</td>\r\n                        <td>{clearedLevel}</td>\r\n                        <td>{testScore}</td>\r\n                        <td>{totalScore}</td>\r\n                    </tr>\r\n                ))}\r\n         </tbody>\r\n       </table>\r\n     )}\r\n   </div>\r\n </div>\r\n    )\r\n}",["160","161"],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":7,"column":10,"nodeType":"168","messageId":"169","endLine":7,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":306,"column":32,"nodeType":"172","messageId":"173","endLine":306,"endColumn":34},{"ruleId":"170","severity":1,"message":"171","line":337,"column":31,"nodeType":"172","messageId":"173","endLine":337,"endColumn":33},{"ruleId":"170","severity":1,"message":"171","line":337,"column":47,"nodeType":"172","messageId":"173","endLine":337,"endColumn":49},{"ruleId":"170","severity":1,"message":"171","line":343,"column":37,"nodeType":"172","messageId":"173","endLine":343,"endColumn":39},{"ruleId":"170","severity":1,"message":"171","line":343,"column":52,"nodeType":"172","messageId":"173","endLine":343,"endColumn":54},{"ruleId":"170","severity":1,"message":"171","line":362,"column":29,"nodeType":"172","messageId":"173","endLine":362,"endColumn":31},{"ruleId":"170","severity":1,"message":"171","line":367,"column":34,"nodeType":"172","messageId":"173","endLine":367,"endColumn":36},{"ruleId":"170","severity":1,"message":"171","line":389,"column":27,"nodeType":"172","messageId":"173","endLine":389,"endColumn":29},{"ruleId":"170","severity":1,"message":"171","line":394,"column":32,"nodeType":"172","messageId":"173","endLine":394,"endColumn":34},{"ruleId":"170","severity":1,"message":"171","line":429,"column":32,"nodeType":"172","messageId":"173","endLine":429,"endColumn":34},{"ruleId":"170","severity":1,"message":"171","line":479,"column":28,"nodeType":"172","messageId":"173","endLine":479,"endColumn":30},{"ruleId":"170","severity":1,"message":"171","line":495,"column":28,"nodeType":"172","messageId":"173","endLine":495,"endColumn":30},{"ruleId":"166","severity":1,"message":"174","line":1,"column":10,"nodeType":"168","messageId":"169","endLine":1,"endColumn":20},{"ruleId":"166","severity":1,"message":"175","line":1,"column":22,"nodeType":"168","messageId":"169","endLine":1,"endColumn":33},{"ruleId":"166","severity":1,"message":"176","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":21},{"ruleId":"166","severity":1,"message":"177","line":2,"column":23,"nodeType":"168","messageId":"169","endLine":2,"endColumn":34},{"ruleId":"166","severity":1,"message":"178","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":10,"column":9,"nodeType":"181","endLine":10,"endColumn":61},{"ruleId":"179","severity":1,"message":"180","line":15,"column":9,"nodeType":"181","endLine":15,"endColumn":50},{"ruleId":"182","severity":1,"message":"183","line":15,"column":51,"nodeType":"181","endLine":15,"endColumn":176},{"ruleId":"182","severity":1,"message":"183","line":11,"column":7,"nodeType":"181","endLine":11,"endColumn":173},{"ruleId":"166","severity":1,"message":"184","line":12,"column":65,"nodeType":"168","messageId":"169","endLine":12,"endColumn":79},{"ruleId":"170","severity":1,"message":"185","line":87,"column":27,"nodeType":"172","messageId":"173","endLine":87,"endColumn":29},{"ruleId":"186","severity":1,"message":"187","line":70,"column":3,"nodeType":"181","endLine":70,"endColumn":36},{"ruleId":"186","severity":1,"message":"187","line":76,"column":7,"nodeType":"181","endLine":76,"endColumn":52},{"ruleId":"186","severity":1,"message":"188","line":78,"column":8,"nodeType":"181","endLine":78,"endColumn":38},{"ruleId":"186","severity":1,"message":"188","line":81,"column":13,"nodeType":"181","endLine":81,"endColumn":43},{"ruleId":"186","severity":1,"message":"188","line":84,"column":7,"nodeType":"181","endLine":84,"endColumn":36},{"ruleId":"186","severity":1,"message":"188","line":87,"column":7,"nodeType":"181","endLine":87,"endColumn":37},{"ruleId":"186","severity":1,"message":"188","line":90,"column":7,"nodeType":"181","endLine":90,"endColumn":37},{"ruleId":"186","severity":1,"message":"188","line":93,"column":7,"nodeType":"181","endLine":93,"endColumn":36},{"ruleId":"186","severity":1,"message":"188","line":96,"column":7,"nodeType":"181","endLine":96,"endColumn":36},{"ruleId":"186","severity":1,"message":"188","line":99,"column":7,"nodeType":"181","endLine":99,"endColumn":37},{"ruleId":"179","severity":1,"message":"180","line":105,"column":3,"nodeType":"181","endLine":105,"endColumn":34},{"ruleId":"179","severity":1,"message":"180","line":108,"column":7,"nodeType":"181","endLine":108,"endColumn":50},{"ruleId":"182","severity":1,"message":"183","line":108,"column":50,"nodeType":"181","endLine":108,"endColumn":175},{"ruleId":"166","severity":1,"message":"178","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":14},{"ruleId":"189","severity":1,"message":"190","line":15,"column":6,"nodeType":"191","endLine":15,"endColumn":18,"suggestions":"192"},{"ruleId":"189","severity":1,"message":"190","line":15,"column":6,"nodeType":"191","endLine":15,"endColumn":18,"suggestions":"193"},{"ruleId":"166","severity":1,"message":"194","line":4,"column":26,"nodeType":"168","messageId":"169","endLine":4,"endColumn":37},{"ruleId":"166","severity":1,"message":"195","line":8,"column":41,"nodeType":"168","messageId":"169","endLine":8,"endColumn":48},{"ruleId":"170","severity":1,"message":"185","line":40,"column":25,"nodeType":"172","messageId":"173","endLine":40,"endColumn":27},{"ruleId":"170","severity":1,"message":"185","line":45,"column":23,"nodeType":"172","messageId":"173","endLine":45,"endColumn":25},{"ruleId":"166","severity":1,"message":"195","line":11,"column":43,"nodeType":"168","messageId":"169","endLine":11,"endColumn":50},{"ruleId":"170","severity":1,"message":"185","line":67,"column":25,"nodeType":"172","messageId":"173","endLine":67,"endColumn":27},{"ruleId":"170","severity":1,"message":"185","line":72,"column":23,"nodeType":"172","messageId":"173","endLine":72,"endColumn":25},{"ruleId":"166","severity":1,"message":"196","line":2,"column":9,"nodeType":"168","messageId":"169","endLine":2,"endColumn":18},{"ruleId":"170","severity":1,"message":"185","line":73,"column":35,"nodeType":"172","messageId":"173","endLine":73,"endColumn":37},{"ruleId":"166","severity":1,"message":"197","line":8,"column":12,"nodeType":"168","messageId":"169","endLine":8,"endColumn":17},{"ruleId":"189","severity":1,"message":"190","line":10,"column":10,"nodeType":"191","endLine":10,"endColumn":12,"suggestions":"198"},{"ruleId":"162","replacedBy":"199"},{"ruleId":"164","replacedBy":"200"},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'home' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'fetchUsers' is defined but never used.","'userDeleted' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Link' is defined but never used.","jsx-a11y/no-distracting-elements","Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'successMessage' is assigned a value but never used.","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["203"],["204"],"'getQuestion' is defined but never used.","'loading' is assigned a value but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.",["205"],["201"],["202"],"no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"206","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [dispatch, subject_id]",{"range":"211","text":"212"},{"range":"213","text":"212"},"Update the dependencies array to be: [dispatch]",{"range":"214","text":"215"},[624,636],"[dispatch, subject_id]",[608,620],[352,354],"[dispatch]"]